name: Build and Push Docker Image to Docker Hub

on:
  push:
    branches: [ "staging", "production" ]
  pull_request:
    branches: [ "staging", "production" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: boudun/mariadb

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build . -t mariadb

  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get commit SHA
        run: echo "## ${{ github.sha }}"

      - name: Extract commit number (optional)
        id: extract_commit_number
        run: |
          commit_number=${{ github.sha }}
          if [[ "$commit_number" =~ ^[0-9a-f]{7} ]]; then
            echo "## Extracted commit number: $commit_number"
            echo "::set-output name=commit_number::$commit_number"
          else
            echo "## Could not extract commit number from SHA"
          fi

      - name: Use commit number in image tag (optional)
        if: steps.extract_commit_number.outputs.commit_number
        run: |
          echo "## Building and pushing image with commit number"
          image_tag=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.extract_commit_number.outputs.commit_number }}
          docker build . -t "$image_tag"
          docker push "$image_tag"

      - name: Build and push Docker image (default)
        run: |
          echo "## Building and pushing image without commit number"
          image_tag=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker build . -t "$image_tag"
          docker push "$image_tag"